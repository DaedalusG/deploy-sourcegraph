apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    description: DaemonSet to ensure all nodes run a cAdvisor pod.
    seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: cluster-admin
    app.kubernetes.io/component: cadvisor
  name: cadvisor
spec:
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      annotations:
        description: Collects and exports container metrics.
        prometheus.io/port: "48080"
        sourcegraph.prometheus/scrape: "true"
      labels:
        deploy: sourcegraph
        app: cadvisor
    spec:
      serviceAccountName: cadvisor
      containers:
        - name: cadvisor
          image: us.gcr.io/sourcegraph-dev/cadvisor:8ea95d9446f6547c0cd6f99459e238ad6202aaee@sha256:4b117813cf3e80dbbec252ec9fa73097390ebde3bfc9bf0e4b20dda0d57351b4
          args:
            # Kubernetes-specific flags below (other flags are baked into the Docker image)
            #
            # disable container labels to allow whitelisting to reduce noise
            - --store_container_labels=false
            - --whitelisted_container_labels=io.kubernetes.container.name,io.kubernetes.pod.name,io.kubernetes.pod.namespace,io.kubernetes.pod.uid
          # it is safe to uncomment this option if you use docker as your container runtime to reduce noise
          # - --docker_only
          resources:
            requests:
              memory: 200Mi
              cpu: 150m
            limits:
              memory: 2000Mi
              cpu: 300m
          volumeMounts:
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
            - name: var-run
              mountPath: /var/run
              readOnly: true
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker
              readOnly: true
            - name: disk
              mountPath: /dev/disk
              readOnly: true
          ports:
            - name: http
              containerPort: 48080
              protocol: TCP
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: var-run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        - name: docker
          hostPath:
            path: /var/lib/docker
        - name: disk
          hostPath:
            path: /dev/disk
