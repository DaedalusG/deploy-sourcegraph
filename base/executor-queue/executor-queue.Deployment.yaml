apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: A singleton service that coordinates external executors. This is required to enable auto-indexing for the cluster (which exists only here and in the Cloud environment).
  labels:
    deploy: sourcegraph
  name: executor-queue
  namespace: dogfood-k8s
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: executor-queue
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: executor-queue
    spec:
      containers:
        - env:
            - name: EXECUTOR_FRONTEND_URL
              value: https://sourcegraph.com
            - name: EXECUTOR_FRONTEND_USERNAME
              value: executor
            - name: EXECUTOR_FRONTEND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: code-intel-secrets
                  key: EXECUTOR_FRONTEND_PASSWORD
            - name: SRC_FRONTEND_INTERNAL
              value: sourcegraph-frontend-internal
            - name: SRC_LOG_FORMAT
              value: json
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          # NOTE: This service is nto in deploy-sourcegraph (but it IS in deploy-sourcegraph-dot-com). This has the consequence of this
          # tag not auto-updating, as it pulls the tag versions from the former repository. This is alright as the executor-queue service
          # is not under heavy development and updating by hand when necessary seems low-effort for the near future.
          image: us.gcr.io/sourcegraph-dev/executor-queue:fb83406c2977509acbaaa39f9511ee31b0ebd151@sha256:d0aea909b100fa1fca439864baf60102efa0b14d977b2f73601f026b9fc94867
          terminationMessagePolicy: FallbackToLogsOnError
          name: executor-queue
          livenessProbe:
            httpGet:
              path: /healthz
              port: debug
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: debug
              scheme: HTTP
            periodSeconds: 5
            timeoutSeconds: 5
          ports:
            - containerPort: 3191
              name: http
            - containerPort: 6060
              name: debug
          resources:
            limits:
              cpu: "2"
              memory: 12Gi
            requests:
              cpu: 500m
              memory: 4Gi
          securityContext:
            runAsUser: 0
