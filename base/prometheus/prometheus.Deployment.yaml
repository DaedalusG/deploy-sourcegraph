apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Collects metrics and aggregates them into graphs.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: prometheus
  name: prometheus
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: us.gcr.io/sourcegraph-dev/prometheus:0a20429a232622fe1674368d8b38a768576a8eae@sha256:d1a8ac6e66e2c71861a9de6b0cb35d6a69b1b1d5bdd982ad3852a45d27302d0d
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            # TODO(Dax)
            initialDelaySeconds: 30
            timeoutSeconds: 30
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - mountPath: /prometheus
              name: data
            - mountPath: /sg_prometheus_add_ons
              name: config
          # Prometheus is relied upon to monitor services for sending alerts to site admins when
          # something is wrong with Sourcegraph, thus its memory requests and limits are the same to
          # guarantee it has enough memory to perform its job reliably and prevent conflicts with
          # other pods on the same host node.
          #
          # The limit chosen here is based on what works reliably on Sourcegraph.com with lots
          # of traffic.
          resources:
            limits:
              cpu: "2"
              memory: 18G
            requests:
              cpu: 500m
              memory: 12G
      securityContext:
        runAsUser: 0
      serviceAccountName: prometheus
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: prometheus
        - configMap:
            defaultMode: 0777
            name: prometheus
          name: config
