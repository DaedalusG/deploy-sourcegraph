apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Handles repository metadata (not Git data) lookups and updates from external code hosts and other similar services.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: repo-updater
  name: repo-updater
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: repo-updater
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: repo-updater
    spec:
      containers:
        - name: repo-updater
          image: us.gcr.io/sourcegraph-dev/repo-updater:ea9fd89f8c3c5821c53ae9032d219cc3ecb6d4c1@sha256:7a54d944125aae8e985ec5c607ec1435d7410687f26b7c705e8baa9f94a41191
          env:
            - name: SRC_LOG_LEVEL
              value: info
            - name: ENABLE_STREAMING_REPO_SYNCER
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: ENABLE_GRAFANA_CLOUD_TRACE_URL
              value: "true"
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 3182
              name: http
            - containerPort: 6060
              name: debug
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: debug
              scheme: HTTP
            periodSeconds: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: "1"
              memory: 500Mi
          volumeMounts:
            - mountPath: /secrets/kms/
              name: kms-service-account
              readOnly: true
      securityContext:
        runAsUser: 0
      volumes:
        - name: kms-service-account
          secret:
            secretName: kms-service-account-key
