apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: pgsql
  name: pgsql
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgsql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: pgsql
        group: backend
    spec:
      initContainers:
        - name: correct-data-dir-permissions
          image: index.docker.io/sourcegraph/alpine:3.12@sha256:ce099fbcd3cf70b338fc4cb2a4e1fa9ae847de21afdb0a849a393b87d94fb174
          command: ["sh", "-c", "if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi"]
          volumeMounts:
            - mountPath: /data
              name: disk
          securityContext:
            runAsUser: 0
      containers:
        - env:
          image: us.gcr.io/sourcegraph-dev/postgres-12.6:65d9f8e0a58b9edefde75ae10bac4b6f224ad556@sha256:0d49eee0ddfaac914d970c457db5c8682de3571e46b7644dd78f287b902ec5df
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            exec:
              command:
                - /ready.sh
          livenessProbe:
            initialDelaySeconds: 15
            exec:
              command:
                - /liveness.sh
          name: pgsql
          ports:
            - containerPort: 5432
              name: pgsql
          resources:
            limits:
              cpu: "7"
              memory: 32Gi
            requests:
              cpu: "7"
              memory: 32Gi
          volumeMounts:
            - mountPath: /data
              name: disk
            - mountPath: /conf
              name: pgsql-conf
        - env:
            - name: DATA_SOURCE_NAME
              value: postgres://sg:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/queries.yaml
          image: us.gcr.io/sourcegraph-dev/postgres_exporter:65d9f8e0a58b9edefde75ae10bac4b6f224ad556@sha256:2ebb422d0d614418ce6f7f89655cecd4ec499f5bb0b09aa1294e4fe38f360960
          terminationMessagePolicy: FallbackToLogsOnError
          name: pgsql-exporter
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      securityContext:
        runAsUser: 0
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: pgsql
        - name: pgsql-conf
          configMap:
            defaultMode: 0777
            name: pgsql-conf
