apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Postgres database for various data.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: pgsql
  name: pgsql
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgsql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: pgsql
        group: backend
    spec:
      initContainers:
        - name: correct-data-dir-permissions
          image: index.docker.io/sourcegraph/alpine-3.12:insiders@sha256:8241c9f3debca3a09851f8904557a427519a93e60232aba1b699985cf41788cc
          command: ["sh", "-c", "if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi"]
          volumeMounts:
            - mountPath: /data
              name: disk
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: "10m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "50Mi"
      containers:
        - name: pgsql
          image: us.gcr.io/sourcegraph-dev/postgres-12.6-alpine:b59fb0ee2b130c2098a79f4a2a5a3c36eecbd9f4@sha256:7971ebbcc2210c6292f2cede15700fc9139a167c827408806451a2cdcff81f71
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            exec:
              command:
                - /ready.sh
          livenessProbe:
            initialDelaySeconds: 15
            exec:
              command:
                - /liveness.sh
          ports:
            - containerPort: 5432
              name: pgsql
          resources:
            limits:
              cpu: "7"
              memory: 32Gi
            requests:
              cpu: "7"
              memory: 32Gi
          volumeMounts:
            - mountPath: /data
              name: disk
            - mountPath: /conf
              name: pgsql-conf
            - mountPath: /dev/shm
              name: dshm
        - name: pgsql-exporter
          env:
            - name: DATA_SOURCE_NAME
              value: postgres://sg:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/queries.yaml
          image: us.gcr.io/sourcegraph-dev/postgres_exporter:b59fb0ee2b130c2098a79f4a2a5a3c36eecbd9f4@sha256:5ec87b556faebdd3d3522b92c395e121b4d2b101278bfcb4b3f88bbee32bc5e4
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsUser: 0
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: pgsql-pd
        - name: pgsql-conf
          configMap:
            defaultMode: 0777
            name: pgsql-conf
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 8G
