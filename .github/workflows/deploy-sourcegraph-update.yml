name: Update from deploy-sourcegraph
on:
  repository_dispatch:
    types: [ deploy-sourcegraph-update ]
jobs:
  apply-change:
    runs-on: ubuntu-latest
    steps:
      - name: Report update details
        run: |
          echo "SHA:    ${{ github.event.client_payload.sha }}"
          echo "PR:     ${{ github.event.client_payload.pull_request }}"
          echo "Actor:  ${{ github.event.client_payload.actor }}"
          echo "Reason: ${{ github.event.client_payload.reason }}"

      # Set up this repository and the upstream repository
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up git
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
      - name: Fetch upstream
        run: |
          git remote add upstream https://github.com/sourcegraph/deploy-sourcegraph.git
          git fetch upstream ${{ github.event.client_payload.sha }}

      # Set up and commit merge
      - name: Set up merge of ${{ github.event.client_payload.sha }}
        run: |
          git merge --strategy=recursive --no-commit ${{ github.event.client_payload.sha }} || true # ignore conflicts
      - name: Unstage irrelevant cherry-picked changes
        run: |
          git reset -- .github
      - name: Commit update - if this step fails, there are no relevant changes
        id: commit
        run: |
          trap 'EXIT_CODE=$?' ERR
          git commit --no-edit
          echo ::set-output name=status::$EXIT_CODE
          exit $EXIT_CODE
        continue-on-error: true

      # Get short hash for ease of use
      - name: Generate git short hash
        id: strings
        run: |
          echo "::set-output name=short_hash::$(git rev-parse --short ${{ github.event.client_payload.sha }})"
          CHANGE_ENTRY="https://github.com/sourcegraph/deploy-sourcegraph/commit/${{ github.event.client_payload.sha }} (https://github.com/sourcegraph/deploy-sourcegraph/pull/${{ github.event.client_payload.pull_request }}) by [${{ github.event.client_payload.actor }}](https://github.com/${{ github.event.client_payload.actor }}) ([logs](https://github.com/sourcegraph/deploy-sourcegraph-dogfood-k8s-2/actions/runs/${{ github.run_id }}))"
          echo "::set-output name=change_entry::$CHANGE_ENTRY"
      
      # Get existing pull request body if existing
      - name: Get pull request
        id: pull_request
        run: |
          BODY=$(curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.groot-preview+json" \
            "https://api.github.com/repos/sourcegraph/deploy-sourcegraph-dogfood-k8s-2/pulls?head=deploy-sourcegraph-changes" | jq --raw-output 'if (type=="array" and (. | length) > 0) then .[0].body else empty end' | cat)
          echo "::set-output name=body::$BODY"

      # Create pull request, configured to automatically merge
      - name: Open pull request
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: release
          branch: deploy-sourcegraph-changes
          labels: automerge,deploy-sourcegraph
          title: 'deploy-sourcegraph@${{ steps.strings.outputs.short_hash }}'
          body: |
            ${{ steps.pull_request.body }}
            * {{ steps.strings.outputs.change_entry }}

      # Report back to originating PR that something went wrong
      # Don't report commit errors, since that is likely caused by lack of relevant changes
      - name: Report failure
        if: ${{ failure() && steps.commit.outputs.status == "0" }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          repository: sourcegraph/deploy-sourcegraph
          issue-number: ${{ github.event.client_payload.pull_request }}
          body: |
            :warning: [Failed to apply this change in the dogfood environment](https://github.com/sourcegraph/deploy-sourcegraph-dogfood-k8s-2/actions/runs/${{ github.run_id }}).
            
            /cc @sourcegraph/distribution, @${{ github.event.client_payload.actor }}
          # token must be a personal access token for cross-repo access - currently @sourcegraph-bot cross-repo-github-actions in 1password
          # token must have `repo` scope
          # configure in https://github.com/sourcegraph/deploy-sourcegraph-dogfood-k8s-2/settings/secrets/COMMENT_PERSONAL_ACCESS_TOKEN
          token: ${{ secrets.COMMENT_PERSONAL_ACCESS_TOKEN }}
